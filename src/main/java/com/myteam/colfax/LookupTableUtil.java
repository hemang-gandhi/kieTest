package com.myteam.colfax;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.io.Serializable;
import java.beans.PropertyDescriptor;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.beans.*;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class LookupTableUtil implements java.io.Serializable {

    private static final long serialVersionUID = 1L;
   private Map<String, Map<String, String>> multiMap = new HashMap<String, Map<String, String>>();
	
	public Map<String, Map<String, String>> getMultiMap() {
		return this.multiMap;
	}

	public void setMultiMap(Map<String, Map<String, String>> multiMap) {
		this.multiMap = multiMap;
	}
    
    public LookupTableUtil(){
	    Map<String, String> planType = new HashMap<>() ;
		this.multiMap.put("PlanType", planType) ;
		planType.put("EMPLOYEE+FAMILY","Family") ;
		planType.put("EMPLOYEE ONLY","Individual") ;
		
		Map<String, String> erValues = new HashMap<>() ;
		this.multiMap.put("ERValues", erValues) ;
		erValues.put("ClientID","658") ;
	}
	
	public void getLookupValue(String lookupTable, String key, Object obj, String attributeName) {
	    try
	    {
    	    PropertyDescriptor propertyDescriptor = new PropertyDescriptor(attributeName, obj.getClass());
    	    Method methodAttributSet = propertyDescriptor.getWriteMethod();
    		Map<String, String> hashMap = this.multiMap.get(lookupTable);
    		String result = hashMap.get(key);
    		methodAttributSet.invoke(obj, result);
	    } catch (IntrospectionException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		} catch (IllegalArgumentException e) {
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			e.printStackTrace();
		}
	}




}
package com.myteam.colfax;

import java.beans.PropertyDescriptor;
import java.lang.reflect.Field;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.beans.*;
import org.apache.commons.lang3.StringUtils;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class CommonUtil implements java.io.Serializable {

    private static final long serialVersionUID = 1L;
    
    private String temp;
    
    public String getTemp() {
		return temp;
	}

	public void setTemp(String temp) {
		this.temp = temp;
	}

    public CommonUtil() {
    }

    public void getFamilyId(String employeeId, Object obj, String attributeName) {
		try
	    {
    	    PropertyDescriptor propertyDescriptor = new PropertyDescriptor(attributeName, obj.getClass());
    	    Method methodAttributeSet = propertyDescriptor.getWriteMethod();
    		String paddedStr = StringUtils.leftPad(employeeId, 8, "0");
		    String result = "E" + paddedStr;
    		methodAttributeSet.invoke(obj, result);
	    } catch (IntrospectionException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		} catch (IllegalArgumentException e) {
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			e.printStackTrace();
		}
	}

    public void getDobSubString(String dob, int start, int end, Object obj, String attributeName) {
		try
	    {
    	    PropertyDescriptor propertyDescriptor = new PropertyDescriptor(attributeName, obj.getClass());
    	    Method methodAttributeSet = propertyDescriptor.getWriteMethod();
    		String result = dob.substring(start, end).replaceFirst("^0+(?!$)", "");
    		System.out.println("result " + result);
    		methodAttributeSet.invoke(obj, result);
	    } catch (IntrospectionException e) {
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			e.printStackTrace();
		} catch (IllegalArgumentException e) {
			e.printStackTrace();
		} catch (InvocationTargetException e) {
			e.printStackTrace();
		}
	}

}